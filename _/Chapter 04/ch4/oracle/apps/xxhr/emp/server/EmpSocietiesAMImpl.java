package ch4.oracle.apps.xxhr.emp.server;

import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;

import oracle.apps.xxhr.emp.server.EmpSocietiesCreateVOImpl;

import oracle.jbo.Row;
import oracle.jbo.server.ViewLinkImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class EmpSocietiesAMImpl extends OAApplicationModuleImpl {
    /**This is the default constructor (do not remove)
     */
    public EmpSocietiesAMImpl() {
    }


    /**Sample main for debugging Business Components code using the tester.
     */
    public static void main(String[] args) {
        launchTester("ch4.oracle.apps.xxhr.emp.server", /* package name */
      "EmpSocietiesAMLocal" /* Configuration Name */);
    }

    /**Container's getter for EmpSocietiesVO1
     */
    public EmpSocietiesVOImpl getEmpSocietiesVO1() {
        return (EmpSocietiesVOImpl)findViewObject("EmpSocietiesVO1");
    }

    /**Container's getter for EmpSocietiesCreateVO1
     */
    public EmpSocietiesCreateVOImpl getEmpSocietiesCreateVO1() {
        return (EmpSocietiesCreateVOImpl)findViewObject("EmpSocietiesCreateVO1");
    }
    
    /** createNewSociety method
     */
    public void createNewSociety(String paramPersonId) {
      // Create an instance of the view object and call it vo
      EmpSocietiesCreateVOImpl vo = getEmpSocietiesCreateVO1();
      
      // We need to do this on a VO that has not been queried before we insert
      // our first row.  We don't want to do it for subsequent inserts.
      if (vo.getFetchedRowCount() == 0) 
      {
        vo.setMaxFetchSize(0);
      }      
      // We are now going to create a record in the view object
      Row row = vo.createRow();
      // Set the PersonId field to the paramPersonId we have passed
      // in the parameter list called params to the method
      row.setAttribute("PersonId", paramPersonId);

      // Now we will call the satndard method to insert the record
      vo.insertRow(row);
      // Required as per OA Framework Model Coding Standard M69
      row.setNewRowState(Row.STATUS_INITIALIZED);
    } 
    
   
    /** commitTransaction method
     */    
    public void commitTransaction() {
        // Commit the transaction
        getTransaction().commit();
    }      
}
