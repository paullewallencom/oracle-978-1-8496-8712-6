package oracle.apps.xxhr.emp.server;

import java.sql.CallableStatement;

import oracle.apps.fnd.framework.OAApplicationModule;
import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.OAViewObject;
import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;
import oracle.apps.fnd.framework.server.OADBTransaction;
import oracle.apps.fnd.framework.server.OAViewObjectImpl;

import oracle.apps.fnd.framework.webui.beans.table.OAAdvancedTableBean;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.RowSetIterator;
import oracle.jbo.Transaction;
import oracle.jbo.server.ViewLinkImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class EmpSearchAMImpl extends OAApplicationModuleImpl {
    /**This is the default constructor (do not remove)
     */
    public EmpSearchAMImpl() {
    }

    /**Sample main for debugging Business Components code using the tester.
     */
    public static void main(String[] args) {
        launchTester("oracle.apps.xxhr.emp.server", /* package name */
      "EmpSearchAMLocal" /* Configuration Name */);
    }

    /**Container's getter for EmpSearchVO1
     */
    public OAViewObjectImpl getEmpSearchVO1() {
        return (OAViewObjectImpl)findViewObject("EmpSearchVO1");
    }

    /**Container's getter for EmpSocietiesVO1
     */
    public OAViewObjectImpl getEmpSocietiesVO1() {
        return (OAViewObjectImpl)findViewObject("EmpSocietiesVO1");
    }

    /**Container's getter for EmpSocietiesVL1
     */
    public ViewLinkImpl getEmpSocietiesVL1() {
        return (ViewLinkImpl)findViewLink("EmpSocietiesVL1");
    }
    
    public void deleteSociety(String societyIdToDelete) {

         // Create an instance of the view object and call it vo
         // Ensure that we have generated the java file for the VOImpl
         
         OAViewObject vo = (OAViewObject)findViewObject("EmpSocietiesVO1");
         Row row[] = vo.getAllRowsInRange();
         
         int fetchedRowCount = vo.getFetchedRowCount(); 
         String a = "";
         for (int i=1; i<row.length; i++) {
             // Ensure that we have generated the java file for the VORowImpl
             EmpSocietiesVORowImpl rowi = (EmpSocietiesVORowImpl)row[i];
             if (rowi.getSocietyId().toString().equals(societyIdToDelete)){
                 rowi.remove();
                 getOADBTransaction().commit();
                 return;
             }
         }
    } 
    
    public void insertSocietyLog(String paramSocId) {

          // Write Action code for Yes Button 
          // SQL Statement
          OADBTransaction txn = (OADBTransaction)getTransaction();
          String stmt = "BEGIN INSERT INTO XXHR_PER_SOCIETIES_TEST" +
                       " (SOCIETY_ID, TEST_DATE) VALUES ("+paramSocId+", SYSDATE);" +
                       " commit;" +
                       " END;";

          try
          {
              CallableStatement cs =txn.createCallableStatement(stmt,1);
              cs.execute();
              cs.close();            
          
          }
          catch(Exception exception1) {
          
              throw OAException.wrapperException(exception1);
          }
          
          throw new OAException("Completed transaction successfully.", OAException.INFORMATION); 
   }

    /**
     * set EmpWhere method
     */
    public void setEmpSearchWhere(String paramPersonId) {
      try
      {
          // Create an instance of the view object and call it vo
          EmpSearchVOImpl vo = (EmpSearchVOImpl)getEmpSearchVO1();
          
          String empWhereClause = vo.getWhereClause();
          vo.setWhereClauseParams(null);
          vo.setWhereClause("personId = :1");
          vo.setWhereClauseParam(0, paramPersonId);
          vo.executeQuery();
          vo.setWhereClause(null);
          vo.setWhereClause(empWhereClause);
      }
      catch(Exception exception1) {
      
         throw OAException.wrapperException(exception1);
      }
      
    }  
         
}